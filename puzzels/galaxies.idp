/* IDP file generated by Python script...
 *
 * Galaxies (logic puzzle)
 * 
 * Rules:
 * 
 * 1) Every region should have two-way rotational symmetry,
 * 2) should contain exactly one dot which is in its centre, and
 * 3) should contain no lines separating two of its own squares from each other.
 * 4) No black holes.
 * 
 * Copyright © 2019 Dries Kennes <http://dries007.net> & Laurens VDW
 * All rights reserved.
 * 
 * Play field:
 *             111111111122222222223
 *   0123456789012345678901234567890
 *  0┏━┯━┯━┯━┯━┯━┯━┯━┯━┯━┯━┯━┯━┯━┯━┓
 *  1┃  A     B          C         ┃
 *  2┠ ┼ ┼ D ┼ ┼E┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┨
 *  3┃             F   G      H    ┃
 *  4┠ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┨
 *  5┃     I                       ┃
 *  6┠ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┨
 *  7┃    J                        ┃
 *  8┠ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ K ┼ ┼ ┼ ┨
 *  9┃L           M                ┃
 * 10┠ ┼ N ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┨
 * 11┃                      O      ┃
 * 12┠ ┼ ┼ ┼P┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼Q┨
 * 13┃R             S              ┃
 * 14┠ ┼ ┼ ┼ ┼T┼ U ┼ ┼ ┼ ┼V┼ ┼ ┼ ┼ ┨
 * 15┃                             ┃
 * 16┠ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ W ┨
 * 17┃              X         Y    ┃
 * 18┠ ┼ Z ┼ ┼ ┼ ┼ ┼ ┼ ┼0┼ ┼ ┼ ┼ ┼ ┨
 * 19┃            1                ┃
 * 20┠2┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ 3 ┼ ┼ ┼ ┨
 * 21┃                          4  ┃
 * 22┠ ┼ ┼ ┼ ┼ ┼ 5 ┼ ┼6┼ ┼ ┼ ┼ ┼ ┼ ┨
 * 23┃                             ┃
 * 24┠ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼7┼ ┼ ┼ ┼ ┨
 * 25┃    8             9         !┃
 * 26┠"┼ ┼ ┼ ┼#┼ $ ┼%┼ ┼ ┼ ┼ ┼ & ┼ ┨
 * 27┃     '               )       ┃
 * 28┠ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┼ ┨
 * 29┃    )        *        +   ,  ┃
 * 30┗━┷━┷━┷━┷━┷━┷━┷━┷━┷━┷━┷━┷━┷━┷━┛
 */
// Vocabulary Block
vocabulary V {
    Size: nat
    type X isa nat
    type Y isa nat
    Center(X, Y)
    Walls(X, Y)
    Square(X, Y)
    Touching(X, Y, X, Y) // Square -> center
    BelongsTo(X, Y, X, Y) // Square -> center
    Reachable(X, Y, X, Y) // Square -> center 
}
// Structure Block
structure S : V {
    X = {0..30}
    Y = {0..30}
    Size = 30
    Center = { (3, 1); (9, 1); (20, 1); (6, 2); (11, 2); (14, 3); (18, 3); (25, 3); (6, 5); (5, 7); (22, 8); (1, 9); (13, 9); (4, 10); (23, 11); (7, 12); (29, 12); (1, 13); (15, 13); (9, 14); (12, 14); (21, 14); (28, 16); (15, 17); (25, 17); (4, 18); (19, 18); (13, 19); (1, 20); (22, 20); (27, 21); (12, 22); (17, 22); (21, 24); (5, 25); (19, 25); (29, 25); (1, 26); (9, 26); (12, 26); (15, 26); (26, 26); (6, 27); (22, 27); (5, 29); (14, 29); (23, 29); (27, 29) }
}
// Theory Block
theory T : V {
    // Define a list of all "squares". (odd coordinates)
    { !x, y: Square(x, y) <- x%2=1 & y%2=1. }
    
    // Wall definitions
    // ----------------
    // Walls cannot be in square spots.
    !(x, y) in Walls: ~Square(x, y).
    // Walls cannot pass trough a center.
    !(x, y) in Walls: ~Center(x, y).
    // Every edge is a wall.
    !x: Walls(x, 0) & Walls(x, Size).
    !y: Walls(0, y) & Walls(Size, y).
    // A wall cannot be a dead end. It would subdivided a region. This translates too:
    // Every wall must have 2 or more neighbours.   X are equal, Y are +-1    OR Y are equal, X are +- 1.
    !(x1, y1) in Walls: #{x2[X], y2[Y]: Walls(x2, y2) & ((x1=x2 & (y1=y2-1|y1=y2+1)) | (y1=y2 & (x1=x2-1|x1=x2+1)))} >= 2.
    // Walls MUST surround regions on all sides.
    !(x1, y1) in Square: !(cx1, cy1) in Center: BelongsTo(x1, y1, cx1, cy1) => (~BelongsTo(x1-2, y1, cx1, cy1) <=> Walls(x1-1, y1)).
    !(x1, y1) in Square: !(cx1, cy1) in Center: BelongsTo(x1, y1, cx1, cy1) => (~BelongsTo(x1+2, y1, cx1, cy1) <=> Walls(x1+1, y1)).
    !(x1, y1) in Square: !(cx1, cy1) in Center: BelongsTo(x1, y1, cx1, cy1) => (~BelongsTo(x1, y1-2, cx1, cy1) <=> Walls(x1, y1-1)).
    !(x1, y1) in Square: !(cx1, cy1) in Center: BelongsTo(x1, y1, cx1, cy1) => (~BelongsTo(x1, y1+2, cx1, cy1) <=> Walls(x1, y1+1)).
    
    // Basic BelongsTo definitions
    // ---------------------------
    // If its not a square, it cant belong to anything.
    !x1, y1: ~Square(x1, y1) => #{x2[X], y2[Y]: BelongsTo(x1, y1, x2, y2)} = 0.
    // No polygamy here.
    !(x1, y1) in Square: #{x2[X], y2[Y]: BelongsTo(x1, y1, x2, y2)} = 1.
    // The belong-to part must be a center.
    !(x1, y1) in Square: ?(x2, y2) in Center: BelongsTo(x1, y1, x2, y2).
    
    // Touching relation
    {
        // Case 1: Center is on a cross
        !x, y: Touching(x-1, y-1, x, y) <- (x%2=0 & y%2=0) & Center(x, y).
        !x, y: Touching(x-1, y+1, x, y) <- (x%2=0 & y%2=0) & Center(x, y).
        !x, y: Touching(x+1, y+1, x, y) <- (x%2=0 & y%2=0) & Center(x, y).
        !x, y: Touching(x+1, y-1, x, y) <- (x%2=0 & y%2=0) & Center(x, y).
        // Case 2: Center is on a wall in X
        !x, y: Touching(x+1, y, x, y) <- (x%2=0 & y%2=1) & Center(x, y).
        !x, y: Touching(x-1, y, x, y) <- (x%2=0 & y%2=1) & Center(x, y).
        // Case 3: Center is on a wall in Y
        !x, y: Touching(x, y+1, x, y) <- (x%2=1 & y%2=0) & Center(x, y).
        !x, y: Touching(x, y-1, x, y) <- (x%2=1 & y%2=0) & Center(x, y).
        // Case 4: Center is in a square
        !x, y: Touching(x, y, x, y) <- Square(x, y) & Center(x, y).
    }
    // If a square is touching a center, it belongs to that center.
    !x, y, cx, cy: Touching(x, y, cx, cy) => BelongsTo(x, y, cx, cy).
    
    // Check region symmetry: mirror is 2 times center minus coordinate
    !(x, y) in Square: !(cx, cy) in Center: BelongsTo(x, y, cx, cy) <=> BelongsTo(2*cx-x, 2*cy-y, cx, cy).
    
    // Reachability relation (Region continuity)
    {
        // Touching squares are reachable. (This 'seeds' the recursive definition)
        !x, y, cx, cy: Reachable(x, y, cx, cy) <- Touching(x, y, cx, cy).
        // A square is reachable if there is no wall in between
        !x, y, cx, cy: Reachable(x-2, y, cx, cy) <- Square(x-2, y) & Reachable(x, y, cx, cy) & ~Walls(x-1, y).
        !x, y, cx, cy: Reachable(x+2, y, cx, cy) <- Square(x+2, y) & Reachable(x, y, cx, cy) & ~Walls(x+1, y).
        !x, y, cx, cy: Reachable(x, y-2, cx, cy) <- Square(x, y-2) & Reachable(x, y, cx, cy) & ~Walls(x, y-1).
        !x, y, cx, cy: Reachable(x, y+2, cx, cy) <- Square(x, y+2) & Reachable(x, y, cx, cy) & ~Walls(x, y+1).
    }
    // A square can only belong to a center if it's reachable.
    !(x, y) in Square: !(cx, cy) in Center: BelongsTo(x, y, cx, cy) <=> Reachable(x, y, cx, cy).
}
// Default main
procedure main() {
    stdoptions.nbmodels = 5
    printmodels(modelexpand(T,S))
}
/* IDP Output
-=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=-
(Reading from stdin)
Warning: Verifying and/or autocompleting structure S
Warning: Consistency cannot be checked for functions over an infinite domain.
Number of models: 1
Model 1
=======
structure  : V {
  X = { 0..30 }
  Y = { 0..30 }
  BelongsTo = { 1,1,6,5; 1,3,6,5; 1,5,6,5; 1,7,1,9; 1,9,1,9; 1,11,1,9; 1,13,1,13; 1,15,4,18; 1,17,4,18; 1,19,1,20; 1,21,1,20; 1,23,1,26; 1,25,1,26; 1,27,1,26; 1,29,1,26; 3,1,3,1; 3,3,6,5; 3,5,6,5; 3,7,6,5; 3,9,4,10; 3,11,4,10; 3,13,4,18; 3,15,4,18; 3,17,4,18; 3,19,4,18; 3,21,4,18; 3,23,4,18; 3,25,5,25; 3,27,5,25; 3,29,5,29; 5,1,6,2; 5,3,6,2; 5,5,6,5; 5,7,5,7; 5,9,4,10; 5,11,4,10; 5,13,4,18; 5,15,4,18; 5,17,4,18; 5,19,4,18; 5,21,4,18; 5,23,4,18; 5,25,5,25; 5,27,6,27; 5,29,5,29; 7,1,6,2; 7,3,6,2; 7,5,6,5; 7,7,7,12; 7,9,7,12; 7,11,7,12; 7,13,7,12; 7,15,7,12; 7,17,7,12; 7,19,4,18; 7,21,4,18; 7,23,5,25; 7,25,5,25; 7,27,6,27; 7,29,5,29; 9,1,9,1; 9,3,6,5; 9,5,6,5; 9,7,6,5; 9,9,9,14; 9,11,9,14; 9,13,9,14; 9,15,9,14; 9,17,9,14; 9,19,9,14; 9,21,12,22; 9,23,9,26; 9,25,9,26; 9,27,9,26; 9,29,9,26; 11,1,11,2; 11,3,11,2; 11,5,6,5; 11,7,6,5; 11,9,6,5; 11,11,12,14; 11,13,12,14; 11,15,12,14; 11,17,13,19; 11,19,13,19; 11,21,12,22; 11,23,12,22; 11,25,12,26; 11,27,12,26; 11,29,14,29; 13,1,14,3; 13,3,14,3; 13,5,14,3; 13,7,13,9; 13,9,13,9; 13,11,13,9; 13,13,12,14; 13,15,12,14; 13,17,12,14; 13,19,13,19; 13,21,12,22; 13,23,12,22; 13,25,12,26; 13,27,12,26; 13,29,14,29; 15,1,14,3; 15,3,14,3; 15,5,14,3; 15,7,22,8; 15,9,22,8; 15,11,22,8; 15,13,15,13; 15,15,21,14; 15,17,15,17; 15,19,13,19; 15,21,13,19; 15,23,12,22; 15,25,15,26; 15,27,15,26; 15,29,14,29; 17,1,20,1; 17,3,18,3; 17,5,22,8; 17,7,22,8; 17,9,22,8; 17,11,22,8; 17,13,21,14; 17,15,21,14; 17,17,17,22; 17,19,17,22; 17,21,17,22; 17,23,17,22; 17,25,17,22; 17,27,17,22; 17,29,14,29; 19,1,20,1; 19,3,18,3; 19,5,22,8; 19,7,22,8; 19,9,22,8; 19,11,21,14; 19,13,21,14; 19,15,21,14; 19,17,19,18; 19,19,19,18; 19,21,19,25; 19,23,19,25; 19,25,19,25; 19,27,19,25; 19,29,19,25; 21,1,20,1; 21,3,25,3; 21,5,25,3; 21,7,22,8; 21,9,22,8; 21,11,21,14; 21,13,21,14; 21,15,21,14; 21,17,21,14; 21,19,22,20; 21,21,22,20; 21,23,21,24; 21,25,21,24; 21,27,22,27; 21,29,23,29; 23,1,20,1; 23,3,25,3; 23,5,25,3; 23,7,22,8; 23,9,22,8; 23,11,23,11; 23,13,21,14; 23,15,21,14; 23,17,21,14; 23,19,22,20; 23,21,22,20; 23,23,26,26; 23,25,26,26; 23,27,22,27; 23,29,23,29; 25,1,25,3; 25,3,25,3; 25,5,25,3; 25,7,22,8; 25,9,22,8; 25,11,22,8; 25,13,21,14; 25,15,21,14; 25,17,25,17; 25,19,27,21; 25,21,27,21; 25,23,27,21; 25,25,26,26; 25,27,26,26; 25,29,23,29; 27,1,25,3; 27,3,25,3; 27,5,22,8; 27,7,22,8; 27,9,22,8; 27,11,22,8; 27,13,21,14; 27,15,28,16; 27,17,28,16; 27,19,27,21; 27,21,27,21; 27,23,27,21; 27,25,26,26; 27,27,26,26; 27,29,27,29; 29,1,25,3; 29,3,25,3; 29,5,22,8; 29,7,22,8; 29,9,22,8; 29,11,29,12; 29,13,29,12; 29,15,28,16; 29,17,28,16; 29,19,27,21; 29,21,27,21; 29,23,27,21; 29,25,29,25; 29,27,26,26; 29,29,26,26 }
  Center = { 1,9; 1,13; 1,20; 1,26; 3,1; 4,10; 4,18; 5,7; 5,25; 5,29; 6,2; 6,5; 6,27; 7,12; 9,1; 9,14; 9,26; 11,2; 12,14; 12,22; 12,26; 13,9; 13,19; 14,3; 14,29; 15,13; 15,17; 15,26; 17,22; 18,3; 19,18; 19,25; 20,1; 21,14; 21,24; 22,8; 22,20; 22,27; 23,11; 23,29; 25,3; 25,17; 26,26; 27,21; 27,29; 28,16; 29,12; 29,25 }
  Reachable = { 1,1,6,5; 1,3,6,5; 1,5,6,5; 1,7,1,9; 1,9,1,9; 1,11,1,9; 1,13,1,13; 1,15,4,18; 1,17,4,18; 1,19,1,20; 1,21,1,20; 1,23,1,26; 1,25,1,26; 1,27,1,26; 1,29,1,26; 3,1,3,1; 3,3,6,5; 3,5,6,5; 3,7,6,5; 3,9,4,10; 3,11,4,10; 3,13,4,18; 3,15,4,18; 3,17,4,18; 3,19,4,18; 3,21,4,18; 3,23,4,18; 3,25,5,25; 3,27,5,25; 3,29,5,29; 5,1,6,2; 5,3,6,2; 5,5,6,5; 5,7,5,7; 5,9,4,10; 5,11,4,10; 5,13,4,18; 5,15,4,18; 5,17,4,18; 5,19,4,18; 5,21,4,18; 5,23,4,18; 5,25,5,25; 5,27,6,27; 5,29,5,29; 7,1,6,2; 7,3,6,2; 7,5,6,5; 7,7,7,12; 7,9,7,12; 7,11,7,12; 7,13,7,12; 7,15,7,12; 7,17,7,12; 7,19,4,18; 7,21,4,18; 7,23,5,25; 7,25,5,25; 7,27,6,27; 7,29,5,29; 9,1,9,1; 9,3,6,5; 9,5,6,5; 9,7,6,5; 9,9,9,14; 9,11,9,14; 9,13,9,14; 9,15,9,14; 9,17,9,14; 9,19,9,14; 9,21,12,22; 9,23,9,26; 9,25,9,26; 9,27,9,26; 9,29,9,26; 11,1,11,2; 11,3,11,2; 11,5,6,5; 11,7,6,5; 11,9,6,5; 11,11,12,14; 11,13,12,14; 11,15,12,14; 11,17,13,19; 11,19,13,19; 11,21,12,22; 11,23,12,22; 11,25,12,26; 11,27,12,26; 11,29,14,29; 13,1,14,3; 13,3,14,3; 13,5,14,3; 13,7,13,9; 13,9,13,9; 13,11,13,9; 13,13,12,14; 13,15,12,14; 13,17,12,14; 13,19,13,19; 13,21,12,22; 13,23,12,22; 13,25,12,26; 13,27,12,26; 13,29,14,29; 15,1,14,3; 15,3,14,3; 15,5,14,3; 15,7,22,8; 15,9,22,8; 15,11,22,8; 15,13,15,13; 15,15,21,14; 15,17,15,17; 15,19,13,19; 15,21,13,19; 15,23,12,22; 15,25,15,26; 15,27,15,26; 15,29,14,29; 17,1,20,1; 17,3,18,3; 17,5,22,8; 17,7,22,8; 17,9,22,8; 17,11,22,8; 17,13,21,14; 17,15,21,14; 17,17,17,22; 17,19,17,22; 17,21,17,22; 17,23,17,22; 17,25,17,22; 17,27,17,22; 17,29,14,29; 19,1,20,1; 19,3,18,3; 19,5,22,8; 19,7,22,8; 19,9,22,8; 19,11,21,14; 19,13,21,14; 19,15,21,14; 19,17,19,18; 19,19,19,18; 19,21,19,25; 19,23,19,25; 19,25,19,25; 19,27,19,25; 19,29,19,25; 21,1,20,1; 21,3,25,3; 21,5,25,3; 21,7,22,8; 21,9,22,8; 21,11,21,14; 21,13,21,14; 21,15,21,14; 21,17,21,14; 21,19,22,20; 21,21,22,20; 21,23,21,24; 21,25,21,24; 21,27,22,27; 21,29,23,29; 23,1,20,1; 23,3,25,3; 23,5,25,3; 23,7,22,8; 23,9,22,8; 23,11,23,11; 23,13,21,14; 23,15,21,14; 23,17,21,14; 23,19,22,20; 23,21,22,20; 23,23,26,26; 23,25,26,26; 23,27,22,27; 23,29,23,29; 25,1,25,3; 25,3,25,3; 25,5,25,3; 25,7,22,8; 25,9,22,8; 25,11,22,8; 25,13,21,14; 25,15,21,14; 25,17,25,17; 25,19,27,21; 25,21,27,21; 25,23,27,21; 25,25,26,26; 25,27,26,26; 25,29,23,29; 27,1,25,3; 27,3,25,3; 27,5,22,8; 27,7,22,8; 27,9,22,8; 27,11,22,8; 27,13,21,14; 27,15,28,16; 27,17,28,16; 27,19,27,21; 27,21,27,21; 27,23,27,21; 27,25,26,26; 27,27,26,26; 27,29,27,29; 29,1,25,3; 29,3,25,3; 29,5,22,8; 29,7,22,8; 29,9,22,8; 29,11,29,12; 29,13,29,12; 29,15,28,16; 29,17,28,16; 29,19,27,21; 29,21,27,21; 29,23,27,21; 29,25,29,25; 29,27,26,26; 29,29,26,26 }
  Square = { 1,1; 1,3; 1,5; 1,7; 1,9; 1,11; 1,13; 1,15; 1,17; 1,19; 1,21; 1,23; 1,25; 1,27; 1,29; 3,1; 3,3; 3,5; 3,7; 3,9; 3,11; 3,13; 3,15; 3,17; 3,19; 3,21; 3,23; 3,25; 3,27; 3,29; 5,1; 5,3; 5,5; 5,7; 5,9; 5,11; 5,13; 5,15; 5,17; 5,19; 5,21; 5,23; 5,25; 5,27; 5,29; 7,1; 7,3; 7,5; 7,7; 7,9; 7,11; 7,13; 7,15; 7,17; 7,19; 7,21; 7,23; 7,25; 7,27; 7,29; 9,1; 9,3; 9,5; 9,7; 9,9; 9,11; 9,13; 9,15; 9,17; 9,19; 9,21; 9,23; 9,25; 9,27; 9,29; 11,1; 11,3; 11,5; 11,7; 11,9; 11,11; 11,13; 11,15; 11,17; 11,19; 11,21; 11,23; 11,25; 11,27; 11,29; 13,1; 13,3; 13,5; 13,7; 13,9; 13,11; 13,13; 13,15; 13,17; 13,19; 13,21; 13,23; 13,25; 13,27; 13,29; 15,1; 15,3; 15,5; 15,7; 15,9; 15,11; 15,13; 15,15; 15,17; 15,19; 15,21; 15,23; 15,25; 15,27; 15,29; 17,1; 17,3; 17,5; 17,7; 17,9; 17,11; 17,13; 17,15; 17,17; 17,19; 17,21; 17,23; 17,25; 17,27; 17,29; 19,1; 19,3; 19,5; 19,7; 19,9; 19,11; 19,13; 19,15; 19,17; 19,19; 19,21; 19,23; 19,25; 19,27; 19,29; 21,1; 21,3; 21,5; 21,7; 21,9; 21,11; 21,13; 21,15; 21,17; 21,19; 21,21; 21,23; 21,25; 21,27; 21,29; 23,1; 23,3; 23,5; 23,7; 23,9; 23,11; 23,13; 23,15; 23,17; 23,19; 23,21; 23,23; 23,25; 23,27; 23,29; 25,1; 25,3; 25,5; 25,7; 25,9; 25,11; 25,13; 25,15; 25,17; 25,19; 25,21; 25,23; 25,25; 25,27; 25,29; 27,1; 27,3; 27,5; 27,7; 27,9; 27,11; 27,13; 27,15; 27,17; 27,19; 27,21; 27,23; 27,25; 27,27; 27,29; 29,1; 29,3; 29,5; 29,7; 29,9; 29,11; 29,13; 29,15; 29,17; 29,19; 29,21; 29,23; 29,25; 29,27; 29,29 }
  Touching = { 1,9,1,9; 1,13,1,13; 1,19,1,20; 1,21,1,20; 1,25,1,26; 1,27,1,26; 3,1,3,1; 3,9,4,10; 3,11,4,10; 3,17,4,18; 3,19,4,18; 5,1,6,2; 5,3,6,2; 5,5,6,5; 5,7,5,7; 5,9,4,10; 5,11,4,10; 5,17,4,18; 5,19,4,18; 5,25,5,25; 5,27,6,27; 5,29,5,29; 7,1,6,2; 7,3,6,2; 7,5,6,5; 7,11,7,12; 7,13,7,12; 7,27,6,27; 9,1,9,1; 9,13,9,14; 9,15,9,14; 9,25,9,26; 9,27,9,26; 11,1,11,2; 11,3,11,2; 11,13,12,14; 11,15,12,14; 11,21,12,22; 11,23,12,22; 11,25,12,26; 11,27,12,26; 13,3,14,3; 13,9,13,9; 13,13,12,14; 13,15,12,14; 13,19,13,19; 13,21,12,22; 13,23,12,22; 13,25,12,26; 13,27,12,26; 13,29,14,29; 15,3,14,3; 15,13,15,13; 15,17,15,17; 15,25,15,26; 15,27,15,26; 15,29,14,29; 17,3,18,3; 17,21,17,22; 17,23,17,22; 19,1,20,1; 19,3,18,3; 19,17,19,18; 19,19,19,18; 19,25,19,25; 21,1,20,1; 21,7,22,8; 21,9,22,8; 21,13,21,14; 21,15,21,14; 21,19,22,20; 21,21,22,20; 21,23,21,24; 21,25,21,24; 21,27,22,27; 23,7,22,8; 23,9,22,8; 23,11,23,11; 23,19,22,20; 23,21,22,20; 23,27,22,27; 23,29,23,29; 25,3,25,3; 25,17,25,17; 25,25,26,26; 25,27,26,26; 27,15,28,16; 27,17,28,16; 27,21,27,21; 27,25,26,26; 27,27,26,26; 27,29,27,29; 29,11,29,12; 29,13,29,12; 29,15,28,16; 29,17,28,16; 29,25,29,25 }
  Walls = { 0,0; 0,1; 0,2; 0,3; 0,4; 0,5; 0,6; 0,7; 0,8; 0,9; 0,10; 0,11; 0,12; 0,13; 0,14; 0,15; 0,16; 0,17; 0,18; 0,19; 0,20; 0,21; 0,22; 0,23; 0,24; 0,25; 0,26; 0,27; 0,28; 0,29; 0,30; 1,0; 1,6; 1,12; 1,14; 1,18; 1,22; 1,30; 2,0; 2,1; 2,2; 2,6; 2,7; 2,8; 2,9; 2,10; 2,11; 2,12; 2,13; 2,14; 2,18; 2,19; 2,20; 2,21; 2,22; 2,23; 2,24; 2,25; 2,26; 2,27; 2,28; 2,29; 2,30; 3,0; 3,2; 3,8; 3,12; 3,24; 3,28; 3,30; 4,0; 4,1; 4,2; 4,3; 4,4; 4,6; 4,7; 4,8; 4,12; 4,24; 4,26; 4,27; 4,28; 4,30; 5,0; 5,4; 5,6; 5,8; 5,12; 5,24; 5,26; 5,28; 5,30; 6,0; 6,4; 6,6; 6,7; 6,8; 6,9; 6,10; 6,11; 6,12; 6,13; 6,14; 6,15; 6,16; 6,17; 6,18; 6,22; 6,23; 6,24; 6,26; 6,28; 6,30; 7,0; 7,4; 7,6; 7,18; 7,22; 7,26; 7,28; 7,30; 8,0; 8,1; 8,2; 8,3; 8,4; 8,6; 8,7; 8,8; 8,9; 8,10; 8,11; 8,12; 8,13; 8,14; 8,15; 8,16; 8,17; 8,18; 8,19; 8,20; 8,21; 8,22; 8,23; 8,24; 8,25; 8,26; 8,27; 8,28; 8,29; 8,30; 9,0; 9,2; 9,8; 9,20; 9,22; 9,30; 10,0; 10,1; 10,2; 10,3; 10,4; 10,8; 10,9; 10,10; 10,11; 10,12; 10,13; 10,14; 10,15; 10,16; 10,17; 10,18; 10,19; 10,20; 10,22; 10,23; 10,24; 10,25; 10,26; 10,27; 10,28; 10,29; 10,30; 11,0; 11,4; 11,10; 11,16; 11,20; 11,24; 11,28; 11,30; 12,0; 12,1; 12,2; 12,3; 12,4; 12,5; 12,6; 12,7; 12,8; 12,9; 12,10; 12,11; 12,12; 12,16; 12,17; 12,18; 12,20; 12,24; 12,28; 12,30; 13,0; 13,6; 13,12; 13,18; 13,20; 13,24; 13,28; 13,30; 14,0; 14,6; 14,7; 14,8; 14,9; 14,10; 14,11; 14,12; 14,13; 14,14; 14,15; 14,16; 14,17; 14,18; 14,20; 14,21; 14,22; 14,24; 14,25; 14,26; 14,27; 14,28; 14,30; 15,0; 15,6; 15,12; 15,14; 15,16; 15,18; 15,22; 15,24; 15,28; 15,30; 16,0; 16,1; 16,2; 16,3; 16,4; 16,5; 16,6; 16,12; 16,13; 16,14; 16,16; 16,17; 16,18; 16,19; 16,20; 16,21; 16,22; 16,23; 16,24; 16,25; 16,26; 16,27; 16,28; 16,30; 17,0; 17,2; 17,4; 17,12; 17,16; 17,28; 17,30; 18,0; 18,2; 18,4; 18,10; 18,11; 18,12; 18,16; 18,17; 18,18; 18,19; 18,20; 18,21; 18,22; 18,23; 18,24; 18,25; 18,26; 18,27; 18,28; 18,29; 18,30; 19,0; 19,2; 19,4; 19,10; 19,16; 19,20; 19,30; 20,0; 20,2; 20,3; 20,4; 20,5; 20,6; 20,10; 20,16; 20,17; 20,18; 20,19; 20,20; 20,21; 20,22; 20,23; 20,24; 20,25; 20,26; 20,27; 20,28; 20,29; 20,30; 21,0; 21,2; 21,6; 21,10; 21,18; 21,22; 21,26; 21,28; 21,30; 22,0; 22,2; 22,6; 22,10; 22,11; 22,12; 22,18; 22,22; 22,23; 22,24; 22,25; 22,26; 22,28; 22,30; 23,0; 23,2; 23,6; 23,10; 23,12; 23,18; 23,22; 23,26; 23,28; 23,30; 24,0; 24,1; 24,2; 24,6; 24,10; 24,11; 24,12; 24,16; 24,17; 24,18; 24,19; 24,20; 24,21; 24,22; 24,23; 24,24; 24,26; 24,27; 24,28; 24,30; 25,0; 25,6; 25,12; 25,16; 25,18; 25,24; 25,28; 25,30; 26,0; 26,4; 26,5; 26,6; 26,12; 26,14; 26,15; 26,16; 26,17; 26,18; 26,24; 26,28; 26,29; 26,30; 27,0; 27,4; 27,12; 27,14; 27,18; 27,24; 27,28; 27,30; 28,0; 28,4; 28,10; 28,11; 28,12; 28,13; 28,14; 28,18; 28,24; 28,25; 28,26; 28,28; 28,29; 28,30; 29,0; 29,4; 29,10; 29,14; 29,18; 29,24; 29,26; 29,30; 30,0; 30,1; 30,2; 30,3; 30,4; 30,5; 30,6; 30,7; 30,8; 30,9; 30,10; 30,11; 30,12; 30,13; 30,14; 30,15; 30,16; 30,17; 30,18; 30,19; 30,20; 30,21; 30,22; 30,23; 30,24; 30,25; 30,26; 30,27; 30,28; 30,29; 30,30 }
  Size = 30
}


-=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=--=#=-
Grid:
            111111111122222222223
  0123456789012345678901234567890
 0┏━┳━┳━┯━┳━┳━┳━┯━┳━┯━┯━┯━┳━┯━┯━┓
 1┃ ┃A┃   ┃B┃ ┃   ┃   C   ┃     ┃
 2┠ ╄━╉ D ╊━╉E╂ ┼ ╊━┿━╈━┿━╃ ┼ ┼ ┨
 3┃   ┃   ┃ ┃ ┃ F ┃ G ┃    H    ┃
 4┠ ┼ ╄━┿━╃ ╄━╉ ┼ ╊━┿━╉ ┼ ┼ ╆━┿━┫
 5┃     I     ┃   ┃   ┃     ┃   ┃
 6┣━╅ ╆━╈━╅ ┼ ╊━╈━╃ ┼ ╄━┿━┿━╃ ┼ ┨
 7┃ ┃ ┃J┃ ┃   ┃ ┃               ┃
 8┠ ╊━╇━╉ ╊━╅ ╂ ╂ ┼ ┼ ┼ K ┼ ┼ ┼ ┨
 9┃L┃   ┃ ┃ ┃ ┃M┃               ┃
10┠ ╂ N ╂ ╂ ╊━╉ ╂ ┼ ╆━┿━╈━╅ ┼ ╆━┫
11┃ ┃   ┃ ┃ ┃ ┃ ┃   ┃   ┃O┃   ┃ ┃
12┣━╋━┿━╉P╂ ╂ ╄━╋━╈━╃ ┼ ╄━╇━┿━╉Q┨
13┃R┃   ┃ ┃ ┃   ┃S┃           ┃ ┃
14┣━╃ ┼ ╂ ╂T╂ U ╊━╃ ┼ ┼V┼ ┼ ╆━╇━┫
15┃     ┃ ┃ ┃   ┃           ┃   ┃
16┠ ┼ ┼ ╂ ╂ ╊━╅ ╊━╈━╈━╅ ┼ ╆━╉ W ┨
17┃     ┃ ┃ ┃ ┃ ┃X┃ ┃ ┃   ┃Y┃   ┃
18┣━╅ Z ╄━╉ ╂ ╄━╇━╉ ╂0╊━┿━╋━╇━┿━┫
19┃ ┃     ┃ ┃  1  ┃ ┃ ┃   ┃     ┃
20┠2╂ ┼ ┼ ╊━╇━┿━╅ ╂ ╊━╉ 3 ╂ ┼ ┼ ┨
21┃ ┃     ┃     ┃ ┃ ┃ ┃   ┃  4  ┃
22┣━╉ ┼ ╆━╋━╅ 5 ╄━╉6╂ ╊━╈━╉ ┼ ┼ ┨
23┃ ┃   ┃ ┃ ┃     ┃ ┃ ┃ ┃ ┃     ┃
24┠ ╊━┿━╃ ╂ ╊━┿━╈━╉ ╂ ╂7╂ ╄━┿━╈━┫
25┃ ┃  8  ┃ ┃   ┃ ┃ ┃9┃ ┃     ┃!┃
26┠"╂ ╆━┿━╉#╂ $ ╂%╂ ╂ ╊━╇━╅ & ╄━┫
27┃ ┃ ┃ ' ┃ ┃   ┃ ┃ ┃ ┃ ) ┃     ┃
28┠ ╊━╇━┿━╉ ╊━┿━╇━╇━╉ ╊━┿━╇━╈━╅ ┨
29┃ ┃  )  ┃ ┃   *   ┃ ┃  +  ┃,┃ ┃
30┗━┻━┷━┷━┻━┻━┷━┷━┷━┻━┻━┷━┷━┻━┻━┛

Valid: True
*/
