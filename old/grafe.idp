/*  
 * grafe.idp
 *
 */
 
vocabulary V {
    type Knoop
    Boog(Knoop, Knoop)
    Bereikbaar(Knoop, Knoop)
}

structure S : V {
    Knoop = { A; B; C; D; E; }
    Boog = { A,B ; A,C ; B,E ; C,D ; C,E ; D,E ; E,B; }
}

Theory T : V {
	{
        // x = van; y = naar
        !x,y: Bereikbaar(x, y) <- Boog(x, y).
        !x,y: Bereikbaar(x, y) <- ?z: Bereikbaar(z, y) & Bereikbaar(x, z). 
    }
}

procedure main(){
    printmodels(modelexpand(T,S))
}
